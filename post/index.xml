<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Iron Age</title><link>https://magictomagic.github.io/post/</link><description>Recent content in Posts on Iron Age</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 01 Jul 2021 01:37:56 +0800</lastBuildDate><atom:link href="https://magictomagic.github.io/post/index.xml" rel="self" type="application/rss+xml"/><item><title>QEMU cross compiling</title><link>https://magictomagic.github.io/post/qemu-cross-compiling/</link><pubDate>Thu, 01 Jul 2021 01:37:56 +0800</pubDate><guid>https://magictomagic.github.io/post/qemu-cross-compiling/</guid><description>Ubuntu 20 TLS VMware 4核17G 100G磁盘 编译好后共用42G install 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 git clone https://github.com/crosstool-ng/crosstool-ng sudo apt-get install build-essential autoconf ncurses-dev # solved: [[https://github.com/c9/core/issues/19][error: curses library not found]] sudo apt install flex texinfo help2man gawk libtool-bin autoconf autopoint bison sudo ./bootstrap ./configure</description></item><item><title>react native</title><link>https://magictomagic.github.io/post/react-%E7%AC%94%E8%AE%B0/</link><pubDate>Sat, 20 Mar 2021 01:37:56 +0800</pubDate><guid>https://magictomagic.github.io/post/react-%E7%AC%94%E8%AE%B0/</guid><description>特点 声明式，组件化，全平台，高效(virtual DOM, DOM Diffing 算法) 练习 关键字联想回忆实现 模板 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 &amp;lt;!DOCTYPE html&amp;gt;</description></item><item><title>JS 自动填表单</title><link>https://magictomagic.github.io/post/js-%E8%87%AA%E5%8A%A8%E5%A1%AB%E8%A1%A8%E5%8D%95/</link><pubDate>Mon, 08 Mar 2021 01:37:56 +0800</pubDate><guid>https://magictomagic.github.io/post/js-%E8%87%AA%E5%8A%A8%E5%A1%AB%E8%A1%A8%E5%8D%95/</guid><description>表单操作 js 原生 模拟点击 1 2 3 4 let ele = document.getElementsByTagName(&amp;#34;textarea&amp;#34;)[1] let evt = new Event(&amp;#39;input&amp;#39;) ele.value = &amp;#39;xxx&amp;#39;; ele.dispatchEvent(evt) jQuary .val() 获取，.val(&amp;quot;xxx&amp;quot;)设置 1 2 3 4 5 6 7 8 9 10 11 12 13 14</description></item><item><title>react native notes save</title><link>https://magictomagic.github.io/post/rn%E7%AC%94%E8%AE%B0%E6%94%B6%E8%97%8F/</link><pubDate>Thu, 04 Mar 2021 01:37:56 +0800</pubDate><guid>https://magictomagic.github.io/post/rn%E7%AC%94%E8%AE%B0%E6%94%B6%E8%97%8F/</guid><description>ES6</description></item><item><title>git 笔记</title><link>https://magictomagic.github.io/post/git-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Sun, 28 Feb 2021 01:37:56 +0800</pubDate><guid>https://magictomagic.github.io/post/git-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>git 裸体 概览 git 目录下 1 2 find 目录名 # 将对应目录下的 子孙文件&amp;amp;子孙目录 平铺在控制台 find 目录名 -type f # 将对应目录下的文件平铺在控制台 初始化 1 2 3</description></item><item><title>docker 笔记</title><link>https://magictomagic.github.io/post/docker-%E7%AC%94%E8%AE%B0/</link><pubDate>Tue, 16 Feb 2021 01:37:56 +0800</pubDate><guid>https://magictomagic.github.io/post/docker-%E7%AC%94%E8%AE%B0/</guid><description>DOCKER 基础 DOCKER 基本命令 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62</description></item><item><title>typescript 笔记</title><link>https://magictomagic.github.io/post/typescript-%E7%AC%94%E8%AE%B0/</link><pubDate>Thu, 11 Feb 2021 01:37:56 +0800</pubDate><guid>https://magictomagic.github.io/post/typescript-%E7%AC%94%E8%AE%B0/</guid><description>TS 基础 语法 基本类型 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61</description></item><item><title>Redis 笔记</title><link>https://magictomagic.github.io/post/redis-%E7%AC%94%E8%AE%B0/</link><pubDate>Sun, 07 Feb 2021 01:37:56 +0800</pubDate><guid>https://magictomagic.github.io/post/redis-%E7%AC%94%E8%AE%B0/</guid><description>基础 操作 Redis.conf 1 2 3 4 5 6 7 8 9 10 11 12 13 daemonize no # 默认不以守护进程方式运行 # 变为 daemonize yes bind 127.0.0.1 # 绑定的IP # 注释掉 让其它主机来访问 requirepass # 设置密码 登录 &amp;gt; auth yourpassword pidfile</description></item><item><title>Python 爬虫笔记</title><link>https://magictomagic.github.io/post/python-%E7%88%AC%E8%99%AB%E7%AC%94%E8%AE%B0/</link><pubDate>Sat, 16 Jan 2021 01:37:56 +0800</pubDate><guid>https://magictomagic.github.io/post/python-%E7%88%AC%E8%99%AB%E7%AC%94%E8%AE%B0/</guid><description>conda 天坑 有依赖无法删除导致其它包无法安装：conda clean --all 慎用conda update conda 和 conda update --force conda，虽然它可能解决上述问题，但依然出现跑12个小时，</description></item><item><title>Nodejs 笔记</title><link>https://magictomagic.github.io/post/nodejs-%E7%AC%94%E8%AE%B0/</link><pubDate>Mon, 11 Jan 2021 01:37:56 +0800</pubDate><guid>https://magictomagic.github.io/post/nodejs-%E7%AC%94%E8%AE%B0/</guid><description>基础 Node.js 没有 BOM、DOM，使 JS 可不通过浏览器运行，是 JS 的运行时环境，构建于Chrome 的 v8 引擎(专门处理JS的虚拟机，一般附带在网页浏览器中</description></item><item><title>有道词典去广告</title><link>https://magictomagic.github.io/post/%E6%9C%89%E9%81%93%E8%AF%8D%E5%85%B8%E5%8E%BB%E5%B9%BF%E5%91%8A/</link><pubDate>Fri, 27 Nov 2020 01:37:56 +0800</pubDate><guid>https://magictomagic.github.io/post/%E6%9C%89%E9%81%93%E8%AF%8D%E5%85%B8%E5%8E%BB%E5%B9%BF%E5%91%8A/</guid><description>效果 如果下面加载不出，可以下载视频看哦！ 修改这些地方以去广告 打开程序安装位置，进入 /8.9.5.0/resultui/css/app.css</description></item><item><title>局域网下共享VmWare虚拟机</title><link>https://magictomagic.github.io/post/vmware-%E5%B1%80%E5%9F%9F%E7%BD%91%E4%B8%8B%E7%9A%84%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%85%B1%E4%BA%AB/</link><pubDate>Tue, 30 Jun 2020 01:37:56 +0800</pubDate><guid>https://magictomagic.github.io/post/vmware-%E5%B1%80%E5%9F%9F%E7%BD%91%E4%B8%8B%E7%9A%84%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%85%B1%E4%BA%AB/</guid><description>虚拟机的拥有者（服务器） 去防火墙的入站规则选择【公用网络】【TCP】，端口填【80, 443,500,902,3091-3094,3099,3101,3389,4001,4002, 4100,4172, 4500,5443,8472, 9427,8009, 18443,22389】。因为没怎么理解[官网]</description></item><item><title>gem5 benchmark</title><link>https://magictomagic.github.io/post/gem5/</link><pubDate>Wed, 24 Jun 2020 01:37:56 +0800</pubDate><guid>https://magictomagic.github.io/post/gem5/</guid><description>复现论文 复现过程简介(在Ubuntu 18/20测试成功)： 下载编译安装gem5(X86和ARM都要)，照论文在X86中添加一个CPU类型(修</description></item><item><title>cvpr project10</title><link>https://magictomagic.github.io/post/cvpr-project10/</link><pubDate>Sun, 31 May 2020 01:37:56 +0800</pubDate><guid>https://magictomagic.github.io/post/cvpr-project10/</guid><description>观察每张图像对应的角点检测的结果 标定以后 由于我是摄像机不动 手机参数 由 得内参 K = $$ \left[ \begin{matrix} 3625.7 &amp;amp; 0 &amp;amp; 1750.6 \ 0 &amp;amp; 3619.2 &amp;amp; 2285.8 \ 0 &amp;amp; 0 &amp;amp; 1 \end{matrix} \right] $$ 对于外参 旋转矩阵</description></item><item><title>cvpr project9</title><link>https://magictomagic.github.io/post/cvpr-project9/</link><pubDate>Fri, 29 May 2020 01:37:56 +0800</pubDate><guid>https://magictomagic.github.io/post/cvpr-project9/</guid><description>环境搭建 先换源，再去官网，按照自己的环境使用命令行下载，也可以使用 colab 在线运行。</description></item><item><title>Simple Chat Program</title><link>https://magictomagic.github.io/post/linux-c-simplechat/</link><pubDate>Sat, 23 May 2020 01:37:56 +0800</pubDate><guid>https://magictomagic.github.io/post/linux-c-simplechat/</guid><description>setup ftp server on centos 7 useful commands 参考： root 登录 install vsftpd 离线下载/上传 思路参考 libcurl man give up NAT &amp;amp; 语音 以后用安卓 service vsftpd restart # 启动ftp. cd /etc/vsftpd in ftpusers &amp;amp; user_list 注释掉root iptables -I INPUT -p tcp &amp;ndash;dport 21</description></item><item><title>Linux V2ray proxy configuration</title><link>https://magictomagic.github.io/post/linux-v2ray-proxy-configuration/</link><pubDate>Sun, 10 May 2020 01:37:56 +0800</pubDate><guid>https://magictomagic.github.io/post/linux-v2ray-proxy-configuration/</guid><description>安装完v2ray后 config.json 用下面的配置 sudo ./v2ray 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52</description></item><item><title>Database experiment</title><link>https://magictomagic.github.io/post/database-experiment/</link><pubDate>Fri, 08 May 2020 01:37:56 +0800</pubDate><guid>https://magictomagic.github.io/post/database-experiment/</guid><description>数据库实验 环境选择 目标：切题、易用、熟悉数据库命令 切题：选择数据库版本为 SQL SERVER 易用：支持 Excel 导入数据 熟悉数据库命令：支持命令行操作 客户端 环境：W</description></item><item><title>Simple chat program</title><link>https://magictomagic.github.io/post/simple-chat-program/</link><pubDate>Wed, 06 May 2020 01:37:56 +0800</pubDate><guid>https://magictomagic.github.io/post/simple-chat-program/</guid><description>基本功能 C++ 资源 自带：主机内通信。 1 2 3 4 5 # first, run server to listen ./tcp_server localhost 9999 # then, run client to establish connect ./tcp_client localhost 9999 server 固定公网 IP 阿里云: CentOS 7 server IP: 47.94.157.136 開放端口 1 2 3 4 5 6 7 8 9 10 11</description></item><item><title>My First Android Application</title><link>https://magictomagic.github.io/post/myfirstandroidapp-process/</link><pubDate>Tue, 05 May 2020 01:37:56 +0800</pubDate><guid>https://magictomagic.github.io/post/myfirstandroidapp-process/</guid><description>Android Field 假话 学习安卓要有锲而不舍的精神与浓厚的兴趣。 大话 学习安卓要坚持四个自信。 空话 要密切关注所选择教程的日期。 套话 Android Studio 的发展日新月异。 废话 学习</description></item><item><title>點播平臺的搭建</title><link>https://magictomagic.github.io/post/centos-ffmpeg-streaming/</link><pubDate>Mon, 04 May 2020 01:37:56 +0800</pubDate><guid>https://magictomagic.github.io/post/centos-ffmpeg-streaming/</guid><description>環境：CentOS 8 install ffmpeg install yasm goto http://www.tortall.net/projects/yasm/releases/ and find the lastest version 1 2 3 4 5 6 7 wget http://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz tar -zxvf yasm-1.3.0.tar.gz cd yasm-1.3.0/ ./configure yum -y install gcc automake autoconf libtool make make make install install x264 goto https://github.com/qupai/ or google x264 to find it in github 1 2 3 4 5 git clone https://github.com/qupai/x264.git cd x264/ ./configure</description></item><item><title>Django Nginx uWSGI login-register</title><link>https://magictomagic.github.io/post/django-nginx-uwsgi_git-login-register_conf/</link><pubDate>Sun, 03 May 2020 01:37:56 +0800</pubDate><guid>https://magictomagic.github.io/post/django-nginx-uwsgi_git-login-register_conf/</guid><description>uWSGI 测试时 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 [uwsgi] # Django-related settings # socket=149.248.57.125:8000 http=0.0.0.0:8000 # socket=127.0.0.1:8000 chdir=/root/login-register/mysite/\ home=/root/ytbkiller wsgi-file=mysite/wsgi.py processes=4 threads=2 master=True pidfile=uwsgi.pid daemonize=uswgi.log buffer-size=32768 格式，顺序？ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 [uwsgi] # Django-related settings # socket=149.248.57.125 # 指定I</description></item><item><title>Nginx 配置 錯誤匯總</title><link>https://magictomagic.github.io/post/nginx-%E7%90%86%E8%A7%A3%E6%80%9D%E8%80%83%E9%85%8D%E7%BD%AE-%E9%8C%AF%E8%AA%A4%E5%8C%AF%E7%B8%BD/</link><pubDate>Sat, 02 May 2020 01:37:56 +0800</pubDate><guid>https://magictomagic.github.io/post/nginx-%E7%90%86%E8%A7%A3%E6%80%9D%E8%80%83%E9%85%8D%E7%BD%AE-%E9%8C%AF%E8%AA%A4%E5%8C%AF%E7%B8%BD/</guid><description>錯誤匯總 Problem 1 nginx Failed to read PID from file /run/nginx.pid: Invalid argument solved 1 1 2 3 4 mkdir -p /etc/systemd/system/nginx.service.d printf &amp;#34;[Service]\nExecStartPost=/bin/sleep 0.1\n&amp;#34; &amp;gt; /etc/systemd/system/nginx.service.d/override.conf systemctl daemon-reload systemctl restart nginx.service cat /etc/nginx/nginx.conf 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33</description></item><item><title>Deploy Django on VPS</title><link>https://magictomagic.github.io/post/deploy-django-on-vps/</link><pubDate>Fri, 01 May 2020 01:37:56 +0800</pubDate><guid>https://magictomagic.github.io/post/deploy-django-on-vps/</guid><description>在 CentOS 8 上部署基于 Django 和 Nginx 的用户注册登录系统 初識 Django 學習步驟 参考教程，搭建本地 Django server 使用 git 管理 Django，使之可衝用於服務器。 基础知识 Linux 基本命令 1</description></item><item><title>Mininet-exp2</title><link>https://magictomagic.github.io/post/mininet-exp2/</link><pubDate>Sat, 25 Apr 2020 01:37:56 +0800</pubDate><guid>https://magictomagic.github.io/post/mininet-exp2/</guid><description>通过控制器的逻辑解决ARP包的洪泛问题 通过Ryu的API可以发现全局的拓扑信息，将交换机的端⼝信息记录下来，当控制器收到⼀个未学习的Arp R</description></item><item><title>pycharm中anaconda与opencv冲突的解决办法</title><link>https://magictomagic.github.io/post/pycharm%E4%B8%ADanaconda%E4%B8%8Eopencv%E5%86%B2%E7%AA%81%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</link><pubDate>Thu, 23 Apr 2020 01:37:56 +0800</pubDate><guid>https://magictomagic.github.io/post/pycharm%E4%B8%ADanaconda%E4%B8%8Eopencv%E5%86%B2%E7%AA%81%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</guid><description>安装方法 参考此博客，opencv 与 python 3.7 兼容，环境变量里把 anaconda3 目录下的 3.7 的 python 版本设为所有 python 解释器的首选，去官网下载 opencv_python-4.1.2+contrib-cp37-cp37m-win_amd64.whl 到 anaconda3\Lib</description></item><item><title>SDN Mininet</title><link>https://magictomagic.github.io/post/sdn-mininet-analyze/</link><pubDate>Sun, 19 Apr 2020 01:37:56 +0800</pubDate><guid>https://magictomagic.github.io/post/sdn-mininet-analyze/</guid><description>Mininet analyze 在配置环境后，执行 1 ipconfig -a 对比创建了 Mininet 后，在 mininet&amp;gt; 下，【打开一个新的终端(Ctrl + Alt + t)】或【在已有终端上打开另一个新的终端(Shift +Ctrl</description></item><item><title>SDN 实验环境配置</title><link>https://magictomagic.github.io/post/sdn-ex1/</link><pubDate>Sat, 18 Apr 2020 01:37:56 +0800</pubDate><guid>https://magictomagic.github.io/post/sdn-ex1/</guid><description>Mininet 见前一个实验。 Ryu 可以选择从源码编译或直接安装，详见官网。 下面是厉害国专属的的简单安装方式 1 pip3 install ryu -i https://pypi.doubanio.com/simple 下载完一个包后，会卡一段时间，不要以为</description></item><item><title>使用 OpenMP Pthread 实现高斯消元法</title><link>https://magictomagic.github.io/post/gauss-experiment/</link><pubDate>Thu, 09 Apr 2020 01:37:56 +0800</pubDate><guid>https://magictomagic.github.io/post/gauss-experiment/</guid><description>性能分析使用从系统获取时间的方法 由于是在虚拟机上运行，性能受主机负载影响。还会受温度等情况影响，不能保证性能分析的准确性 串行 思路：Forwa</description></item><item><title>MPI experiment</title><link>https://magictomagic.github.io/post/mpi-experiment/</link><pubDate>Tue, 07 Apr 2020 01:37:56 +0800</pubDate><guid>https://magictomagic.github.io/post/mpi-experiment/</guid><description>串行版本 随机产生指定数据规模的矩阵 若不调用 MPI 函数感觉做对比实验不严谨，因为不包含 MPI 函数的开销。 代码见附件 并行版本 最原始的方法 思路：通过将数据</description></item><item><title>使用CUDA实现并行奇偶排序并使用性能分析工具分析</title><link>https://magictomagic.github.io/post/windows10-cuda-install/</link><pubDate>Fri, 03 Apr 2020 01:37:56 +0800</pubDate><guid>https://magictomagic.github.io/post/windows10-cuda-install/</guid><description>配置目标环境 由于基于 VMware 的虚拟机不支持调用 Host 的 GPU 卡，除非装双系统。因为网上已经有在真机上配置环境的教程了，又因为有大量的同学使用的是白嫖百度 GPU</description></item><item><title>SDN mininet fattree creat</title><link>https://magictomagic.github.io/post/sdn-mininet-fattree/</link><pubDate>Mon, 30 Mar 2020 01:37:56 +0800</pubDate><guid>https://magictomagic.github.io/post/sdn-mininet-fattree/</guid><description>环境 VMware Host: Windows10 Guest: Ubuntu18.04 LTS ##安装mininet 参考这里、这里 1 2 3 # git clone git://github.com/mininet/mininet # cd mininet/util/ # ./install.sh -a # -a 表示安装所有组件和依赖 注意：使用 socks 代理来连接国外的源会导致</description></item></channel></rss>